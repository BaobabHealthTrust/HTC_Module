<!DOCTYPE html>
<html>
<head>
<title>Patient Search</title>

<script type='text/javascript' language='javascript' src='/touchscreentoolkit/lib/javascripts/touchScreenToolkit.js' defer  ></script>
<script type='text/javascript' language='javascript' src='/javascripts/multi_column_controls.js' ></script>

<style>

    .tt_controls_year_of_birth #qwerty {
        display: none;
    }

    .tt_controls_age_estimate #qwerty {
        display: none;
    }

    .tt_controls_cell_phone_number #qwerty {
        display: none;
    }

    .tt_controls_ground_phone_number #qwerty {
        display: none;
    }

    .tt_controls_office_phone_number #qwerty {
        display: none;
    }

    .tt_controls_home_phone_number #qwerty {
        display: none;
    }

    .tt_controls_year_of_birth #Unknown {
        display: block;
    }

    .tt_controls_age_estimate #Unknown {
        display: none;
    }

    .tt_controls_middle_name #na {
        display: block;
    }

    .tt_controls_ground_phone_number #Unknown {
        display: block;
    }

    .tt_controls_region_of_origin .keyboard {
        display: none;
    }

    .tt_controls_current_region .keyboard {
        display: none;
    }

    .tt_controls_month_of_birth .keyboard {
        display: none !important;
    }

    

    .tt_controls_home_village #space, #apostrophe {
        display: inline;
    }

    .tt_controls_home_district #num {
        display: none;
    }

    .tt_controls_current_traditional_authority_ta #space {
        display: inline;
    }

    .tt_controls_current_village_residence #space {
        display: inline;
    }

    .tt_controls_cell_phone_number #num, #plus, #apostrophe, #star, #char, #abc, #date, #slash, #minus, #comma, #percent, #decimal {
        display: none;
    }

    .tt_controls_home_phone_number #num, #plus, #apostrophe, #star, #abc, #date, #slash, #minus, #comma, #percent, #decimal {
        display: none;
    }

    .tt_controls_office_phone_number #num, #plus, #apostrophe, #star, #abc, #date, #slash, #minus, #comma, #percent, #decimal {
        display: none;
    }

   
    #tt_page_occupation .options li {
        font-size: 30px;
    }
		#tt_page_occupation .options {
			height: 700px;
    }

    #space {
        display: inline;
    }

    .nota #na {
        display: block;
    }

    #num {
        display: block;
    }

    #char {
        display: none;
    }

    #apostrophe {
        display: inline;
    }

    .tt_controls_home_district #num {
        display: none;
    }

    .tt_controls_current_district #num {
        display: none;
    }

    .tt_controls_current_city_place_or_area_of_residence #num {
        display: block;
    }

    .tt_controls_current_city_place_or_area_of_residence #char {
        display: block;
    }

    .tt_controls_closest_landmark_or_plot_number #num {
        display: block;
    }

    .tt_controls_closest_landmark_or_plot_number #char {
        display: block;
    }

    .azButton .numericKeyboard #char {
        display: block;
    }

    li.highlighted {
        background-color: lightblue;
    }

    li {
        /*padding: 5px;*/
        cursor: pointer;
        font-size: 1.5em;
        margin: 2px;
        -moz-user-select: none;
    }
   

</style>
<script>

    var value = "";
    var values_hash = {};
    selectAll = false;

    <% if params[:relation] %>
    var tt_cancel_destination = "/patients/relationships?patient_id=<%=h params[:relation] -%>"
    <% else %>
    var tt_cancel_destination = "/"
    <% end %>

    var dob_year = null;
    var dob_month = null;
    dob_day = null;
    var set_dob = null;

    var skipped = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

    var json = <%= raw({
          "national_id" => nil,
          "application" => "#{@settings["application_name"]}",
          "site_code" => "#{@settings["site_code"]}",
          "return_path" => "http://#{request.host_with_port}/process_result",
          "names" =>
          {
              "family_name" => nil,
              "given_name" => nil
          },
          "gender" => "#{params["gender"]}",
          "attributes" => {
              "occupation" => nil,
              "cell_phone_number" => nil
          },
          "birthdate" => nil,
          "patient" => {
              "identifiers" => []
          },
          "birthdate_estimated" => nil,
          "addresses" => {
              "current_residence" => nil,
              "current_village" => nil,
              "current_ta" => nil,
              "current_district" => nil,
              "home_village" => nil,
              "home_ta" => nil,
              "home_district" => nil
          }
        }.to_json) %>;

    function showNext(){
        __$("nextButton").style.display = "block";
    }

    function hideNext(){
        __$("nextButton").style.display = "none";
    }

    function showSummary(field){
        var div = document.createElement("div");
        div.id = "status";
        div.className = "statusLabel";

        if(field == "year"){

            div.style.marginTop = "-4%";
            div.style.textAlign = "center";
            div.innerHTML = "<i>Year   =   "  + __$("person_birth_year").value + "</i>"
            __$("inputFrame" + tstCurrentPage).appendChild(div);

        }else if (field == "day"){

            var months = ["", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December", "Unknown"];
            div.style.textAlign = "center";
            div.innerHTML = "<i>Year   =  " + __$("person_birth_year").value + "; Month = " + months[__$("person_birth_month").value] + "</i>";
            __$("inputFrame" + tstCurrentPage).appendChild(div);
        }
    }

    function sendToDDE() {
        json.names.given_name = __$("given_name").value;
        json.names.family_name = __$("family_name").value;
        json.names.gender = __$("gender").value;

        var dob = "1900-01-01";
        var dob_est = false;

        dob_year = __$("person_birth_year").value.trim();
        dob_month = __$("person_birth_month").value.trim();
        dob_day = __$("person_birth_day").value.trim();

        if (dob_year.match(/^$/)) {
            dob_year = null;
        }

        if (dob_month.match(/^$/)) {
            dob_month = null;
        }

        if (dob_day.match(/^$/)) {
            dob_day = null;
        }

        if (dob_year == null || String(dob_year).toLowerCase() == "unknown") {
            var yr = (new Date()).getFullYear() - parseInt(__$("person_age_estimate").value);

            dob = yr + "-07-05";
            dob_est = true;
        } else if ((dob_year != null && String(dob_year).toLowerCase() != "unknown") && (dob_month == null || String(dob_month).toLowerCase() == "unknown")) {
            dob = dob_year + "-07-10";
            dob_est = true;
        } else if ((dob_year != null && String(dob_year).toLowerCase() != "unknown") &&
                (dob_month != null && String(dob_month).toLowerCase() != "unknown") &&
                (dob_day == null || String(dob_day).toLowerCase() == "unknown")) {
            dob = dob_year + "-" + padZeros(dob_month, 2) + "-15";
            dob_est = true;
        } else {
            dob = dob_year + "-" + padZeros(dob_month, 2) + "-" + padZeros(dob_day, 2);
            dob_est = false;
        }

        json.birthdate = dob;

        json.birthdate_estimated = dob_est;

        json.addresses.current_residence = (
                __$("address1") ?
                        __$("address1").value : null
                );

        json.addresses.current_village = (
                (__$("person_addresses_city_village") && __$("filter_region").value != "Foreign") ?
                        __$("person_addresses_city_village").value : null
                );

        json.addresses.current_village = (
                (__$("person_addresses_city_village") && __$("filter_region").value != "Foreign") ?
                        __$("person_addresses_city_village").value : null
                );

        json.addresses.current_ta = (
                (__$("filter_t_a") && __$("filter_region").value != "Foreign") ?
                        __$("filter_t_a").value : null
                );

        json.addresses.current_district = (
                (__$("state_province") && __$("filter_region").value != 'Foreign') ?
                        __$("state_province").value : null
                );

        json.addresses.home_village = (
                __$("person_addresses_neighborhood_cell") ?
                        __$("person_addresses_neighborhood_cell").value : null
                );

        json.addresses.home_ta = (
                __$("person_addresses_county_district") ?
                        __$("person_addresses_county_district").value : null
                );

        json.addresses.home_district = (
                __$("address2") ?
                        __$("address2").value : null
                );

        json.attributes.citizenship = (
                        __$("person_citizenship") && __$("person_citizenship").value != 'Other' ?
                __$("person_citizenship").value : __$("person_race").value
                );

        json.attributes.country_of_residence = (
                        __$("filter_region").value == "Foreign" ?
                __$("state_province").value : null
                );

        json.attributes.cell_phone_number = (
                __$("person_cell_phone_number") ?
                        __$("person_cell_phone_number").value : null
                );

        json.attributes.home_phone_number = (
                __$("person_home_phone_number") ?
                        __$("person_home_phone_number").value : null
                );

        json.attributes.office_phone_number = (
                __$("person_office_phone_number") ?
                        __$("person_office_phone_number").value : null
                );

        json.attributes.occupation = (
                __$("occupation") ?
                        __$("occupation").value : null
                );

        json["print_barcode"] = true;

        __$("person").innerHTML = JSON.stringify(json);

        // console.log(__$("person").innerHTML);

        __$("creation").submit();
    }

    function seen(page) {
        for (var i = page; i >= 0; i--) {
            skipped[i] = 1;
        }
    }

    function setDOB() {
        try {
            dob_year = document.getElementById('tt_page_year_of_birth').getElementsByTagName("input")[0].value
        } catch (e) {
            dob_year = dob_year
        }
        try {
            dob_month = document.getElementById('tt_page_month_of_birth').getElementsByTagName("input")[0].getAttribute('tstvalue')
            if (dob_month.length == 1)
                dob_month = 0 + dob_month
        } catch (e) {
            dob_month = dob_month
        }
        try {
            dob_day = document.getElementById('tt_page_birth_day').getElementsByTagName("input")[0].value
            if (dob_day.length == 1)
                dob_day = 0 + dob_day
        } catch (e) {
            dob_day = dob_day
        }

        set_dob = (dob_year + '-' + dob_month + '-' + dob_day)
        return true
    }

    function validateDOB() {
        setDOB();
        curr_date = new Date();

        if (dateCreate(set_dob) == 'Invalid Date') {
            if (set_dob.split('-')[1] == 'Unknown')
                return true

            if (curr_date.getFullYear() == parseInt(dob_year)) {
                if ((curr_date.getMonth() + 1) < parseInt(dob_month)) {
                    if (document.getElementById('tt_page_month_of_birth') != null)
                        return true

                    return false
                }
            }

            if (dob_month == 'Unknown') {
                if (curr_date.getFullYear() == parseInt(dob_year)) {
                    if ((curr_date.getMonth() + 1) < parseInt(dob_month))
                        return false
                }
            }
        } else {
            if (document.getElementById('tt_page_month_of_birth') != null)
                return true

            if (curr_date < dateCreate(set_dob))
                return false
        }
        return true
    }

    function dateCreate(date_str) {
        intyear = 0;
        intmonth = 0;
        intday = 0;
        intyear = parseInt(date_str.substring(0, 4))
        intmonth = (parseInt(date_str.substring(5, 7)) - 1)
        intday = (parseInt(date_str.substring(8, 10)))

        if (intmonth == -1)
            intmonth = (parseInt(date_str.substring(5, 7).substring(1, 2)) - 1)

        if (intday == 0)
            intday = parseInt(date_str.substring(8, 10).substring(1, 2))

        return new Date(intyear, intmonth, intday);
    }

    function set_ajaxURL_for_suggestions(url, filter_value) {
        $('touchscreenInput' + tstCurrentPage).setAttribute('ajaxURL', url + filter_value + "&search_string=");
        listSuggestions(tstCurrentPage);
    }

    function upNextButton() {
        $('nextButton').innerHTML = '<span>Finish</span>';

        $('nextButton').onmousedown = function () {

            sendToDDE()

        };
    }

</script>
</head>

<body>
<div id='content'>
<%= form_tag "/people/create" do %>

    <%= text_field_tag "person[names][given_name]", params[:given_name],
                       {:id => 'given_name', :field_type => 'alpha', :helpText => 'First name',
                        :ajaxURL => '/person_names/given_names?search_string=',
                        :allowFreeText => true,
                        :condition => '$("given_name").value == "" || skipped[tstCurrentPage] == 1',
                        :tt_onLoad => 'seen(tstCurrentPage);'} %>

    <%= text_field_tag "person[names][family_name]", params[:family_name], {:id => 'family_name', :field_type => 'alpha', :helpText => 'Last name', :ajaxURL => '/person_names/family_names?search_string=', :allowFreeText => true, :condition => '$("family_name").value == "" || skipped[tstCurrentPage] == 1', :tt_onLoad => 'seen(tstCurrentPage);'} %>

    Gender: <%= select_tag :gender,
                           options_for_select([["", ""], ["Male", "M"], ["Female", "F"]], params["gender"]),
                           {:id => 'gender', :helpText => 'Gender', :condition => '__$("gender").value == "" || skipped[tstCurrentPage] == 1',
                            :tt_onLoad => 'seen(tstCurrentPage);'} %>


    <%= text_field_tag "person[birth_year]", nil, {
            :helpText => 'Year of Birth',
            :field_type => 'number',
            :absoluteMin => "1890",
            :min => "1940",
            :absoluteMax => Date.today.year,
            :tt_pageStyleClass => "Numeric",
            :tt_onLoad => 'seen(tstCurrentPage);',
            :validationJS => "setDOB();"} %>

    <%= select_tag "person[birth_month]", month_name_options, {
            :helpText => 'Month of Birth',
            :condition => '$("person_birth_year").value.toLowerCase() != "unknown"',
            :validationJS => "validateDOB();",
						:tt_pageStyleClass => "longSelectList",
            :validationMessage => 'Please enter a valid date'} %>

    <%= text_field_tag "person[age_estimate]", nil,
                       {:helpText => 'Age Estimate',
                        :absoluteMin => 1,
                        :absoluteMax => age_limit,
                        :field_type => 'number',
                        :condition => '$("person_birth_year").value == "Unknown"',
                        :tt_onLoad => "$('nextButton').style.display = 'block';",
                        :tt_pageStyleClass => "Numeric NumbersOnly"} %>

    <%= text_field_tag "person[birth_day]", nil,
                       :field_type => 'number',
                       :helpText => 'Birth Day',
                       :condition => '($("person_birth_year").value != "Unknown") && ($("person_birth_month").value != "Unknown")',
                       :tt_onLoad => "getDayOfMonthPicker($('person_birth_year').value, $('person_birth_month').value); showSummary('day'); showNext();",
                       :validationJS => "validateDOB()", :validationMessage => 'Please enter a valid date' %>

    <%= select_tag("person[citizenship]",
                   options_for_select([" ", "Malawian", "Other"], params[:citizenship]),
                   :helpText => "Nationality",
                   :tt_onLoad => "showNext(); seen(tstCurrentPage); "
        ) %>

    <%= text_field_tag "person[race]", nil, :field_type => 'text',
                       :helptext => "Specify nationality",
                       :allowFreeText => true,
                       :ajaxURL => "/people/static_nationalities?&search_string=",
                       :tt_onLoad => "$('nextButton').style.display = 'block';",
                       :condition => '($("person_citizenship").value != "Malawian")' %>

    <%= text_field "region", 'region_name', :helpText => 'Home address',
                   :condition => '($("person_citizenship").value == "Malawian")',
                   :tt_pageStyleClass => "NoKeyboard",
                   :ajaxURL => '/people/region?field=role&value=',
                   :tt_BeforeUnLoad => "verifyFields(1)",
                   :tt_onLoad => "showNext(); ajaxifyDistricts();"  %></p>

    <%= text_field_tag "person[addresses][address2]", params[:address2], {:id => 'address2',
                                                                          :ajaxURL => '', :field_type => 'alpha',
                                                                          :helpText => 'Home District', :allowFreeText => false,
                                                                          :condition => 'false',
                                                                          :tt_onLoad => "seen(tstCurrentPage);"}  %>

    <%= text_field_tag "p['address2_a']", nil, {
                                                :tt_onUnLoad => '$("address2").value = $("address2_a").value',
                                                :condition => '(($("address2").value == "Other") && ($("person_citizenship").value == "Malawian"))',
                                                :id => 'address2_a',
                                                :tt_requireNextClick => true,
                                                :ajaxURL => '/person_addresses/address2?search_string=',
                                                :allowFreeText => true,
                                                :field_type => 'alpha',
                                                :helpText => 'Specify Home District',
                                                :tt_onLoad => "$('nextButton').style.display = 'block';"} %>

    <%= text_field "person[addresses]", 'county_district',
                   :condition => '($("address2").value != "Other") && ($("person_citizenship").value == "Malawian")',
                   :helpText => 'Ancestral Traditional Authority (T/A) or area of residence',
                   :tt_requireNextClick => false, :ajaxURL => '', :tt_pageStyleClass => "azButton",
                   :tt_onLoad => 'set_ajaxURL_for_suggestions("/people/traditional_authority/?filter_value=" ,document.getElementById("address2").value);$("nextButton").style.display = "none";' %></p>

    <%= text_field_tag "person[addresses][neighborhood_cell]", params[:city_village],
                       {
                               :field_type => 'alpha',
                               :helpText => "Home Village",
                               :tt_requireNextClick => false,
                               :condition => '($("person_citizenship").value == "Malawian")',
                               :tt_pageStyleClass => "azButton",
                               :ajaxURL => '/people/village?search_string=',
                               :allowFreeText => false,
                               :tt_onLoad => 'set_ajaxURL_for_suggestions("/people/village?filter_value=" ,document.getElementById("person_addresses_county_district").value);$("nextButton").style.display = "none";'} %>


    <%= text_field "p[addresses]", 'county_district_a',
                   :tt_onUnLoad => '$("person_addresses_county_district").value = $("p_addresses_county_district_a").value',
                   :condition => '$("address2").value == "Other"',
                   :ajaxURL => '/person_addresses/traditional_authority?search_string=',
                   :helpText => 'Specify Ancestral Traditional Authority (T/A) or area of residence',
                   :tt_pageStyleClass => "azButton",
                   :allowFreeText => true,
                   :tt_onLoad => "$('nextButton').style.display = 'block';" %></p>

    <p><label for="filter_region">Current Region</label></br>
      <%= text_field "filter", 'region', :helpText => 'Current Address',
                     :ajaxURL => '/people/region?field=role&foreign=true&value=',
                     :tt_pageStyleClass => "NoKeyboard",
                     :tt_BeforeUnLoad => "verifyFields(2)",
                     :tt_onUnLoad => "if ($('filter_region').value == 'Foreign'){ $('person_addresses_city_village').value = ''; $('state_province').value;}",
                     :tt_onLoad => "showNext(); ajaxifyDistricts();" %></p>


    <%= text_field_tag "person[addresses][state_province]", params[:state_province], {
            :id => 'state_province',
            :condition => "false"
    } %>

    <p><label for="filter_t_a">Traditional Authority (T/A) or area of residence</label></br>

      <%= text_field "filter", 't_a',
                     :condition => '$("state_province").value != "Other" && $("filter_region").value != "Foreign"',
                     :helpText => 'Traditional Authority (T/A) or area of residence',
                     :tt_requireNextClick => false,
                     :ajaxURL => '',
                     :tt_pageStyleClass => "azButton",
                     :tt_onLoad => 'set_ajaxURL_for_suggestions("/people/traditional_authority?filter_value="
                     ,document.getElementById("state_province").value);$("nextButton").style.display = "none";' %>
    </p>

    <%= text_field "filter", 't_a_a', :tt_onUnLoad => 'if ($("t_a_a")) {$("t_a").value = $("t_a_a").value}',
                   :condition => '$("state_province").value == "Other" && $("filter_region").value != "Foreign"',
                   :ajaxURL => '/person_addresses/traditional_authority?search_string=',
                   :tt_pageStyleClass => "azButton",
                   :allowFreeText => true,
                   :helpText => 'Specify Traditional Authority (T/A) or area of residence',
                   :tt_onLoad => "$('nextButton').style.display = 'block';" %></p>


    <%= text_field_tag "person[addresses][city_village]", params[:city_village],
                       {:condition => '$("filter_t_a").value != "Other" && $("filter_region").value != "Foreign"',
                        :field_type => 'alpha',
                        :helpText => 'Location/Village',
                        :tt_requireNextClick => false,
                        :tt_pageStyleClass => "azButton",
                        :ajaxURL => '/people/village?search_string=',
                        :allowFreeText => false,
                        :tt_onLoad => 'set_ajaxURL_for_suggestions("/people/village?filter_value=" ,document.getElementById("filter_t_a").value);$("nextButton").style.display = "none";'} %>

    <%= text_field_tag "p[addresses][city_village_a]", params[:city_village_a],
                       {:tt_onUnLoad => '$("person_addresses_city_village").value = $("p_addresses_city_village_a").value',
                        :condition => '$("filter_t_a").value == "Other"',
                        :ajaxURL => '/person_addresses/village?search_string=',
                        :allowFreeText => true, :field_type => 'alpha',
                        :helpText => 'Specify Location/Village',
                        :tt_pageStyleClass => "azButton",
                        :tt_requireNextClick => true, :tt_onLoad => "$('nextButton').style.display = 'block';"} %>


    <%= text_field_tag "person[addresses][address1]", params[:address1],
                       {:id => 'address1',
                        :helpText => 'Closest Landmark',
                        :tt_requireNextClick => false,
                        :ajaxURL => '/people/landmark?filter_value=',
                        :tt_pageStyleClass => "NoKeyboard",
                        :tt_onLoad => "hideNext()"
                        #:tt_onLoad => "set_ajaxURL_for_suggestions('/people/landmark?filter_value=' ,document.getElementById('person_addresses_city_village').value);$('nextButton').style.display = 'block';"
                       } %>

    <%= text_field_tag "p[addresses][address1]", nil,
                       {:id => 'address1_1',
                        :helpText => 'Specify Closest Landmark or Plot Number',
                        :condition => "__$('address1').value == 'Other'",
                        :tt_onUnLoad => "__$('address1').value = __$('address1_1').value",
                        :tt_onLoad => "showNext()"
                        #:tt_onLoad => "set_ajaxURL_for_suggestions('/people/landmark?filter_value=' ,document.getElementById('person_addresses_city_village').value);$('nextButton').style.display = 'block';"
                       } %>

    <%= text_field_tag "person[cell_phone_number]", params[:cell_phone_number],
                       {
                               :field_type => 'number',
                               :tt_onLoad => "showNext()",
                               :helpText => 'Cell Phone Number',
                               :validationRule => "^0\\d{7}$|Unknown|Not Available|N\/A|^0\\d{9}$",
                               :validationMessage => "Not a valid phone number",
                               :tt_pageStyleClass => "nota"
                       }
    %>

    <%= select_tag("person[occupation]", options_for_select(@occupations, params[:occupation]),
                   :helpText => "Occupation",
                   :id => "occupation",
                   :allowFreeText => false,
                   :tt_pageStyleClass => "longSelectList",
                   :tt_onLoad => "seen(tstCurrentPage); selectAll = false; createSingleSelectControl(''); upNextButton();",
                   :ttMatchFromBeginning => "true") %>

    <!-- Make sure patient is created -->

    <%= hidden_field_tag "person[patient]", "" %>

    <%= hidden_field_tag "relation", params[:relation] %>

    <%= hidden_field_tag :identifier, params[:identifier] %>

    <%= submit_tag "Create person" %>

<% end %>

<%= form_tag("/dde/send_to_dde", "method" => 'post', "enctype" => 'multipart/form-data',
            "id" => 'creation', "class" => "form-horizontal", "autocomplete" => "off", "role" => "form", "novalidate" => "novalidate") do %>

    <textarea id="person" name="person" style="display: none;" condition="false"></textarea>

<% end %>
</div>
</body>
</html>
